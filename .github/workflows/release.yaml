---
name: Release

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
      - release-*
  push:
    branches:
      - main
      - release-*

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["v1.28.9-k3s1", "v1.29.5-k3s1", "v1.30.0-k3s1"]
    permissions:
      contents: write # needed to write releases
      packages: write # needed for ghcr access
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare
        id: prep
        run: |
          VERSION=sha-${GITHUB_SHA::8}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\//}
          fi
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "REVISION=${GITHUB_SHA}" >> $GITHUB_OUTPUT
      - name: Generate images meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/beholdenkey/oss/forge-k3d-k3s
          tags: |
            type=raw,value=${{ matrix.version }}
            type=raw,value=latest
      - name: Publish multi-arch image
        uses: docker/build-push-action@v6
        with:
          sbom: true
          provenance: true
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: ./docker
          file: ./docker/Dockerfile
          build-args: |
            K3S_TAG=${{ matrix.version }}
            REVISION=${{ steps.prep.outputs.REVISION }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
